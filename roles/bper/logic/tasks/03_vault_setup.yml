##########################################################################
#
# - find suitable target vault SVM for Snapmirror destination volume
# 
#
# 
# Alexey Mikhaylov
# NetApp Deutschland GmbH
# Professional Services 2024
##########################################################################
---
- name: Vault SVM finder
  block:
  - name: Set cluster credentials
    ansible.builtin.set_fact:
      auth: &auth
        hostname:        "{{ ansible_host | default(omit) }}"
        username:        "{{ ontap_username | default(omit) }}"
        password:        "{{ ontap_password | default(omit) }}"
        validate_certs:  "{{ auth_rest_validate_certs | default(false) }}"
        use_rest:        always
        use_python_keys: true
    no_log: true

  - name: Set target vault SVM name
    ansible.builtin.set_fact:
      target_vault_svm:  "{{ svm_source_vault_mapping[vars_local.source.svm.name] }}"
  
  - name: Fail if no suitable vault SVM found
    ansible.builtin.assert:
      that:
        - target_vault_svm is defined
      msg: "No suitable vault SVM found for the volume {{ vars_local.source.svm.name }}"

  - name: Set target vault SVM facts
    ansible.builtin.set_fact:
      target_vault_cluster:    "{{ (inventory_svms_vault.hosts | selectattr('name', 'equalto', target_vault_svm))[0]['cluster_name'] }}"
      target_vault_cluster_ip: "{{ (inventory_svms_vault.hosts | selectattr('name', 'equalto', target_vault_svm))[0]['cluster_mgmt'] }}"  
  
  - name: Get available aggregates for vault SVM
    netapp.ontap.na_ontap_rest_info:
      <<: *auth
      gather_subset:
        - vserver_info
      fields:
        - aggregates
      parameters:
        name:   "{{ target_vault_svm }}"
      hostname: "{{ target_vault_cluster_ip }}"
    register: svm_aggregates
    when: target_vault_svm is defined
    
  - name: Define destination vault SVM - vars_local facts
    ansible.builtin.set_fact:
      vars_local_update:
        snapmirror:
          destination:
            cluster:
              name:          "{{ target_vault_cluster }}"
              management_ip: "{{ target_vault_cluster_ip }}"
            svm:
              name:          "{{ target_vault_svm }}"
        destination:
          cluster:
            name:            "{{ target_vault_cluster }}"
            management_ip:   "{{ target_vault_cluster_ip }}"
          svm:
            name:            "{{ target_vault_svm }}"
            aggregates:      "{{ svm_aggregates.ontap_info.svm_svms.records[0].aggregates | map(attribute='name') | list }}"
              
  - name: Merging logic found facts with vars_local
    ansible.builtin.set_fact:
      vars_local: "{{ vars_local | default({}) | combine(vars_local_update, recursive=true)}}"
    
  when: inventory_svms_mcc.keys() | length > 0
...