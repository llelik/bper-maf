##########################################################################
#
# - find suitable target vault SVM for Snapmirror destination volume
# 
#
# 
# Alexey Mikhaylov
# NetApp Deutschland GmbH
# Professional Services 2024
##########################################################################
---
- name: Vault SVM finder
  block:
  - name: Set cluster credentials
    ansible.builtin.set_fact:
      auth: &auth
        hostname:        "{{ ansible_host | default(omit) }}"
        username:        "{{ ontap_username | default(omit) }}"
        password:        "{{ ontap_password | default(omit) }}"
        validate_certs:  "{{ auth_rest_validate_certs | default(false) }}"
        use_rest:        always
        use_python_keys: true
    no_log: true

  - ansible.builtin.set_fact:
      source_data_svm: "{{ vars_local.source.svm.name }}"
  
  ### need fix for svm name extraction
  - ansible.builtin.set_fact:
      target_vault_svm:        "{{ svm_item.name }}"
      target_vault_cluster:    "{{ svm_item.cluster_name }}"
      target_vault_cluster_ip: "{{ svm_item.cluster_mgmt }}"  
    loop: "{{ inventory_svms_vault.hosts }}"
    loop_control:
      loop_var: svm_item
    when:
      - source_data_svm[-6:-3] in svm_item.name
      #- source_data_svm[-5:] in svm_item.name

      # PROD: - source_data_svm[-6:-3] in svm_item.name
      # Lab setup:
      # prod: svm_moa_test
      # vault: svm_test_new_vault

  - name: Get available aggregates for vault SVM
    netapp.ontap.na_ontap_rest_info:
      <<: *auth
      gather_subset:
        - vserver_info
      fields:
        - aggregates
      parameters:
        name:   "{{ target_svm.name }}"
      hostname: "{{ target_svm.cluster_name }}"
    register: svm_aggregates
    when: target_vault_svm is defined
  
  - name: Fail if no suitable vault SVM found
    ansible.builtin.fail:
      msg: "No suitable vault SVM found for the volume"
    when: target_vault_svm is not defined
  
  - name: Define destination vault SVM - vars_local facts
    ansible.builtin.set_fact:
      vars_local_update:
        snapmirror:
          destination:
            cluster:
              name:          "{{ target_vault_cluster }}"
              management_ip: "{{ target_vault_cluster_ip }}"
            svm:
              name:          "{{ target_vault_svm }}"
        destination:
          cluster:
            name:            "{{ target_vault_cluster }}"
            management_ip:   "{{ target_vault_cluster_ip }}"
          svm:
            name:            "{{ target_vault_svm }}"
            aggregates:      "{{ svm_aggregates.ontap_info.svm_svms.records[0].aggregates | map(attribute='name') | list }}"
              
  - name: Merging logic local facts with vars_local
    ansible.builtin.set_fact:
      vars_local: "{{ vars_local | default({}) | combine(vars_local_update, recursive=true)}}"
    
  
  when: inventory_svms_mcc.keys() | length > 0
...