##########################################################################
#
# - Variables setup according to naming convention 
# 
#
# 
# Alexey Mikhaylov
# NetApp Deutschland GmbH
# Professional Services 2024
##########################################################################
---
vars_local:
  source:
    volume:
      name: "{{ input_proc | upper }}{{ storage_env[input_env_fact] | default(input_env_fact) }}01"
      size: "{{ input_size }}"
      aggregate_exclude_name_regex: "{{ exclude_name_regex | default(omit) }}"
      aggregate_include_name_regex: "{{ include_name_regex | default(omit) }}"
      junction_path: "/{{ input_proc | upper }}{{ storage_env[input_env_fact] | default(input_env_fact) }}01"
      snaplock:
        type:        "{{ 'non_snaplock' if input_snaplock | lower == 'false'}}"
      export_policy:
        name:        "Q_{{ input_proc | upper }}{{ storage_env[input_env_fact] | default(input_env_fact) }}01"
    qtree:
      name:          "Q_{{ input_proc | upper }}{{ storage_env[input_env_fact] | default(input_env_fact) }}01"
      export_policy: "Q_{{ input_proc | upper }}{{ storage_env[input_env_fact] | default(input_env_fact) }}01"
    export_policy:
      name:          "Q_{{ input_proc | upper }}{{ storage_env[input_env_fact] | default(input_env_fact) }}01"
      rules:
        - client_match: "{{ input_clientmatch | default('0.0.0.0/0') }}"
          rule_index: 1
          ro_rule: any
          rw_rule: any
          protocol: nfs
          super_user_security: sys
  destination:
    volume:
      name: "{{ input_proc | upper }}{{ storage_env[input_env_fact] | default(input_env_fact) }}01_vault"
      type: dp
  snapmirror:
    source:
      volume:
        name: "{{ input_proc | upper }}{{ storage_env[input_env_fact] | default(input_env_fact) }}01"
    destination:
      volume:
        name: "{{ input_proc | upper }}{{ storage_env[input_env_fact] | default(input_env_fact) }}01_vault"
vars_templates:
vars_overrides:
...